variables:
  PROJECT_DIR: "src/KenjinxAndroid"         # Dein Android-Projektordner
  GRADLE_USER_HOME: "$CI_PROJECT_DIR/.gradle"
  ANDROID_SDK_ROOT: "/opt/android-sdk"      # vom Image bereitgestellt

cache:
  key: "gradle-cache"
  paths:
    - .gradle/wrapper
    - .gradle/caches

stages:
  - build
  - release

# Baut die Debug-APK auf deinem Branch oder bei Tags
build_debug:
  stage: build
  image: ghcr.io/cirruslabs/android-sdk:34
  rules:
    - if: '$CI_COMMIT_BRANCH == "libryujinx_bionic"'
    - if: '$CI_COMMIT_TAG'    # zus√§tzlich bei Tags
  before_script:
    - cd "$PROJECT_DIR"
    - chmod +x gradlew
    - ./gradlew --version
  script:
    - ./gradlew assembleDebug
  artifacts:
    when: always
    paths:
      - $PROJECT_DIR/app/build/outputs/apk/debug/app-debug.apk
    expire_in: 2 weeks

# Erstellt automatisch eine Release auf GitLab, wenn du ein Tag pushst
create_release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs: ["build_debug"]
  rules:
    - if: '$CI_COMMIT_TAG'    # nur bei Tags
  script:
    - release-cli create
        --name "Kenji-SC $CI_COMMIT_TAG"
        --tag-name "$CI_COMMIT_TAG"
        --description "Automated release for Kenji-SC $CI_COMMIT_TAG"
    - release-cli upload
        --tag-name "$CI_COMMIT_TAG"
        --name "app-debug.apk"
        --filepath "$PROJECT_DIR/app/build/outputs/apk/debug/app-debug.apk"
